#!/bin/bash

# Script de Deploy para Fly.io
# Uso: ./deploy.sh [test|deploy|logs|status]

set -e

# Cores para output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

APP_NAME="meus-progressos"

echo -e "${BLUE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
echo -e "${BLUE}‚ïë   FormAval - Deploy Script (Fly.io)     ‚ïë${NC}"
echo -e "${BLUE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
echo ""

# Fun√ß√£o para verificar se flyctl est√° instalado
check_flyctl() {
    if ! command -v flyctl &> /dev/null; then
        echo -e "${RED}‚ùå Erro: flyctl n√£o est√° instalado${NC}"
        echo ""
        echo "Instale o Fly.io CLI:"
        echo "  macOS:   brew install flyctl"
        echo "  Linux:   curl -L https://fly.io/install.sh | sh"
        echo "  Windows: iwr https://fly.io/install.ps1 -useb | iex"
        exit 1
    fi
    echo -e "${GREEN}‚úÖ Fly.io CLI encontrado${NC}"
}

# Fun√ß√£o para testar localmente com Docker
test_local() {
    echo -e "${BLUE}üß™ Testando aplica√ß√£o localmente...${NC}"

    if ! command -v docker &> /dev/null; then
        echo -e "${YELLOW}‚ö†Ô∏è  Docker n√£o encontrado. Usando servidor Python...${NC}"
        echo -e "${BLUE}üì° Iniciando servidor em http://localhost:8080${NC}"
        python3 -m http.server 8080
    else
        echo -e "${BLUE}üê≥ Fazendo build da imagem Docker...${NC}"
        docker build -t $APP_NAME .

        echo -e "${GREEN}‚úÖ Build conclu√≠do${NC}"
        echo -e "${BLUE}üì° Iniciando servidor em http://localhost:8080${NC}"
        echo -e "${YELLOW}   Pressione Ctrl+C para parar${NC}"
        docker run -p 8080:8080 $APP_NAME
    fi
}

# Fun√ß√£o para fazer deploy
deploy() {
    echo -e "${BLUE}üöÄ Iniciando deploy...${NC}"

    # Verificar se app existe
    if ! flyctl apps list | grep -q "$APP_NAME"; then
        echo -e "${YELLOW}‚ö†Ô∏è  App '$APP_NAME' n√£o existe. Criando...${NC}"
        flyctl apps create $APP_NAME
    fi

    echo -e "${BLUE}üì¶ Fazendo deploy...${NC}"
    flyctl deploy

    echo ""
    echo -e "${GREEN}‚úÖ Deploy conclu√≠do!${NC}"
    echo ""
    echo -e "${BLUE}üì± Sua aplica√ß√£o est√° em:${NC}"
    flyctl info | grep "Hostname"
    echo ""
    echo -e "${YELLOW}‚ö†Ô∏è  IMPORTANTE: N√£o esque√ßa de autorizar o dom√≠nio no Firebase Console!${NC}"
    echo -e "${YELLOW}   https://console.firebase.google.com ‚Üí Authentication ‚Üí Settings ‚Üí Authorized domains${NC}"
}

# Fun√ß√£o para ver logs
show_logs() {
    echo -e "${BLUE}üìã Mostrando logs (Ctrl+C para sair)...${NC}"
    flyctl logs -f
}

# Fun√ß√£o para mostrar status
show_status() {
    echo -e "${BLUE}üìä Status da aplica√ß√£o:${NC}"
    flyctl status
    echo ""
    echo -e "${BLUE}üíª M√°quinas virtuais:${NC}"
    flyctl machine list
    echo ""
    echo -e "${BLUE}üåê Informa√ß√µes da aplica√ß√£o:${NC}"
    flyctl info
}

# Fun√ß√£o para abrir aplica√ß√£o
open_app() {
    echo -e "${BLUE}üåê Abrindo aplica√ß√£o no navegador...${NC}"
    flyctl open
}

# Menu principal
case "${1:-help}" in
    test|t)
        check_flyctl
        test_local
        ;;
    deploy|d)
        check_flyctl
        deploy
        ;;
    logs|l)
        check_flyctl
        show_logs
        ;;
    status|s)
        check_flyctl
        show_status
        ;;
    open|o)
        check_flyctl
        open_app
        ;;
    help|h|*)
        echo "Uso: ./deploy.sh [comando]"
        echo ""
        echo "Comandos dispon√≠veis:"
        echo "  test   (t) - Testar aplica√ß√£o localmente"
        echo "  deploy (d) - Fazer deploy no Fly.io"
        echo "  logs   (l) - Ver logs da aplica√ß√£o"
        echo "  status (s) - Ver status da aplica√ß√£o"
        echo "  open   (o) - Abrir aplica√ß√£o no navegador"
        echo "  help   (h) - Mostrar esta mensagem"
        echo ""
        echo "Exemplos:"
        echo "  ./deploy.sh test     # Testar localmente"
        echo "  ./deploy.sh deploy   # Deploy no Fly.io"
        echo "  ./deploy.sh logs     # Ver logs"
        ;;
esac
